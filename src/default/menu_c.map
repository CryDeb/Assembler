Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodqi4.o)
                              Display.o (__udivmodqi4)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8515.o (exit)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
                              menu.o (__do_copy_data)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
                              menu.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

SS                  0x1               menu.o
HH                  0x1               menu.o
MM                  0x1               menu.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8515.o
LOAD protocol.o
LOAD menu.o
LOAD Display.o
LOAD commands.o
LOAD layercontent.o
LOAD input.o
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x4ba
 *(.vectors)
 .vectors       0x00000000       0x22 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8515.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000022                . = ALIGN (0x2)
                0x00000022                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000022        0x0 linker stubs
 *(.trampolines*)
                0x00000022                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000022                __ctors_start = .
 *(.ctors)
                0x00000022                __ctors_end = .
                0x00000022                __dtors_start = .
 *(.dtors)
                0x00000022                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000022        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8515.o
                0x00000022                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000022        0xc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8515.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000002e       0x16 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
                0x0000002e                __do_copy_data
 .init4         0x00000044       0x10 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
                0x00000044                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000054        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8515.o
 *(.init9)
 *(.text)
 .text          0x00000058        0x2 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8515.o
                0x00000058                __vector_1
                0x00000058                __vector_12
                0x00000058                __bad_interrupt
                0x00000058                __vector_6
                0x00000058                __vector_3
                0x00000058                __vector_11
                0x00000058                __vector_13
                0x00000058                __vector_7
                0x00000058                __vector_5
                0x00000058                __vector_4
                0x00000058                __vector_9
                0x00000058                __vector_2
                0x00000058                __vector_15
                0x00000058                __vector_8
                0x00000058                __vector_14
                0x00000058                __vector_10
                0x00000058                __vector_16
 .text          0x0000005a        0x0 protocol.o
 .text          0x0000005a       0xce menu.o
                0x0000005a                print_splash
                0x0000007e                init
                0x0000008e                display
                0x000000b6                process
 .text          0x00000128      0x20a Display.o
                0x00000128                function_set
                0x00000134                swap_byte
                0x00000138                write
                0x00000164                LCD_CHR
                0x00000166                commands
                0x0000018e                LCD_Init
                0x00000224                LCD_STR
                0x0000023a                LCD_CLR
                0x00000242                SET_DCB
                0x0000024a                CURB_OFF
                0x00000256                CURB_ON
                0x00000262                CUR_OFF
                0x0000026e                CUR_ON
                0x0000027a                LCD_OFF
                0x00000286                LCD_ON
                0x00000292                LCD_RAM
                0x000002a4                setPosition
                0x000002c6                LCD_INT
 .text          0x00000332       0xb8 commands.o
                0x00000332                go2Field
                0x00000398                go2Layer
 .text          0x000003ea        0x0 layercontent.o
 .text          0x000003ea       0xaa input.o
                0x000003ea                bit_pos
                0x000003fa                scanCode
 .text          0x00000494        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodqi4.o)
 .text          0x00000494        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text          0x00000494        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text          0x00000494        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
                0x00000494                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000494        0xa protocol.o
                0x00000494                main
 .text.libgcc.mul
                0x0000049e        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodqi4.o)
 .text.libgcc.div
                0x0000049e       0x18 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodqi4.o)
                0x0000049e                __udivmodqi4
 .text.libgcc   0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.div
                0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc   0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
                0x000004b6                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000004b6        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
                0x000004b6                _exit
                0x000004b6                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000004b6        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x000004ba                _etext = .

.data           0x00800060       0x3c load address 0x000004ba
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8515.o
 .data          0x00800060        0x0 protocol.o
 .data          0x00800060       0x16 menu.o
                0x00800060                AppSettings
                0x0080006c                ChangeTimeLayer
                0x00800071                ShowTimeLayer
 .data          0x00800076        0x1 Display.o
                0x00800076                S_LCD
 .data          0x00800077        0x0 commands.o
 .data          0x00800077        0x0 layercontent.o
 .data          0x00800077        0x1 input.o
 .data          0x00800078        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodqi4.o)
 .data          0x00800078        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .data          0x00800078        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .data          0x00800078        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x00800078       0x24 menu.o
 *(.gnu.linkonce.d*)
                0x0080009c                . = ALIGN (0x2)
                0x0080009c                _edata = .
                0x0080009c                PROVIDE (__data_end, .)

.bss            0x0080009c        0x9
                0x0080009c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080009c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8515.o
 .bss           0x0080009c        0x0 protocol.o
 .bss           0x0080009c        0x5 menu.o
                0x0080009c                SettingsLayer
 .bss           0x008000a1        0x1 Display.o
                0x008000a1                position
 .bss           0x008000a2        0x0 commands.o
 .bss           0x008000a2        0x0 layercontent.o
 .bss           0x008000a2        0x0 input.o
 .bss           0x008000a2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodqi4.o)
 .bss           0x008000a2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .bss           0x008000a2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .bss           0x008000a2        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x008000a2        0x3 menu.o
                0x008000a2                SS
                0x008000a3                HH
                0x008000a4                MM
                0x008000a5                PROVIDE (__bss_end, .)
                0x000004ba                __data_load_start = LOADADDR (.data)
                0x000004f6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000a5        0x0
                0x008000a5                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000a5                PROVIDE (__noinit_end, .)
                0x008000a5                _end = .
                0x008000a5                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8515.o

.stabstr        0x00000000       0x97
 *(.stabstr)
 .stabstr       0x00000000       0x97 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8515.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2f
 *(.comment)
 .comment       0x00000000       0x2f protocol.o
                                 0x30 (size before relaxing)
 .comment       0x00000000       0x30 menu.o
 .comment       0x00000000       0x30 Display.o
 .comment       0x00000000       0x30 commands.o
 .comment       0x00000000       0x30 layercontent.o
 .comment       0x00000000       0x30 input.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xb8
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 protocol.o
 .debug_aranges
                0x00000020       0x20 menu.o
 .debug_aranges
                0x00000040       0x20 Display.o
 .debug_aranges
                0x00000060       0x20 commands.o
 .debug_aranges
                0x00000080       0x18 layercontent.o
 .debug_aranges
                0x00000098       0x20 input.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000     0x1460
 *(.debug_info)
 .debug_info    0x00000000       0xf7 protocol.o
 .debug_info    0x000000f7      0x521 menu.o
 .debug_info    0x00000618      0x922 Display.o
 .debug_info    0x00000f3a      0x30e commands.o
 .debug_info    0x00001248       0x5d layercontent.o
 .debug_info    0x000012a5      0x1bb input.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x81d
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0xb0 protocol.o
 .debug_abbrev  0x000000b0      0x237 menu.o
 .debug_abbrev  0x000002e7      0x2aa Display.o
 .debug_abbrev  0x00000591      0x135 commands.o
 .debug_abbrev  0x000006c6       0x26 layercontent.o
 .debug_abbrev  0x000006ec      0x131 input.o

.debug_line     0x00000000      0x724
 *(.debug_line)
 .debug_line    0x00000000       0xd2 protocol.o
 .debug_line    0x000000d2      0x17e menu.o
 .debug_line    0x00000250      0x267 Display.o
 .debug_line    0x000004b7       0xf7 commands.o
 .debug_line    0x000005ae       0x1a layercontent.o
 .debug_line    0x000005c8      0x15c input.o

.debug_frame    0x00000000      0x26c
 *(.debug_frame)
 .debug_frame   0x00000000       0x24 protocol.o
 .debug_frame   0x00000024       0x60 menu.o
 .debug_frame   0x00000084      0x158 Display.o
 .debug_frame   0x000001dc       0x48 commands.o
 .debug_frame   0x00000224       0x48 input.o

.debug_str      0x00000000      0x35c
 *(.debug_str)
 .debug_str     0x00000000       0xa2 protocol.o
                                 0xd6 (size before relaxing)
 .debug_str     0x000000a2      0x185 menu.o
                                0x24a (size before relaxing)
 .debug_str     0x00000227       0xd2 Display.o
                                0x214 (size before relaxing)
 .debug_str     0x000002f9       0x2e commands.o
                                0x177 (size before relaxing)
 .debug_str     0x00000327       0x12 layercontent.o
                                 0xaf (size before relaxing)
 .debug_str     0x00000339       0x23 input.o
                                0x138 (size before relaxing)

.debug_loc      0x00000000      0x83f
 *(.debug_loc)
 .debug_loc     0x00000000      0x1f1 menu.o
 .debug_loc     0x000001f1      0x43b Display.o
 .debug_loc     0x0000062c      0x111 commands.o
 .debug_loc     0x0000073d      0x102 input.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000       0x28
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x10 protocol.o
 .debug_ranges  0x00000010       0x18 Display.o

.debug_macro
 *(.debug_macro)
OUTPUT(menu_c.elf elf32-avr)
LOAD linker stubs
